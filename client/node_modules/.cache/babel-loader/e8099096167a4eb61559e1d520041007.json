{"ast":null,"code":"var _jsxFileName = \"E:\\\\Complete React GraphQL ContextAPI Firebase\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync(); // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection('collections');\n    // //1. firebase store snapshot\n    // // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    // //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    // //     updateCollections(collectionsMap);\n    // //     this.setState({ loading: false });\n    // // });\n    // //2. promise\n    // collectionRef.get().then(snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // });\n    //3. fetch\n    // fetch('https://firestore.googleapis.com/v1/projects/crown-db-e0e73/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections));\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, Object.assign({\n      path: `${match.path}/:collectionId`,\n      pinner: true,\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    })), \")} />\");\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/Complete React GraphQL ContextAPI Firebase/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","createStructuredSelector","selectIsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAGA,SAASC,0BAAT,QAA2C,+BAA3C;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAEhB,UAAM;AAAEN,MAAAA;AAAF,QAAiC,KAAKO,KAA5C;AACAP,IAAAA,0BAA0B,GAHV,CAKhB;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEb,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,MAAlD;AAAmD,MAAA,SAAS,EAAE,CAACD;AAA/D,OAAwFH,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,UADJ;AAMH;;AA7CkC;;AAgDvC,MAAMK,eAAe,GAAGC,wBAAwB,CAAC;AAC7CH,EAAAA,mBAAmB,EAAEI;AADwB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n\r\n        // const { updateCollections } = this.props;\r\n        // const collectionRef = firestore.collection('collections');\r\n\r\n\r\n        // //1. firebase store snapshot\r\n        // // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n        // //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        // //     updateCollections(collectionsMap);\r\n        // //     this.setState({ loading: false });\r\n        // // });\r\n\r\n        // //2. promise\r\n        // collectionRef.get().then(snapshot => {\r\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionsMap);\r\n        //     this.setState({ loading: false });\r\n        // });\r\n\r\n        //3. fetch\r\n        // fetch('https://firestore.googleapis.com/v1/projects/crown-db-e0e73/databases/(default)/documents/collections')\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(collections));\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsLoaded } = this.props;\r\n        \r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} component={CollectionsOverviewContainer}  />\r\n                <Route path={`${match.path}/:collectionId`} pinner isLoading={!isCollectionsLoaded} {...props} />)} />\r\n            </div>\r\n        );\r\n    };\r\n}  \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectIsCollectionsLoaded  \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}